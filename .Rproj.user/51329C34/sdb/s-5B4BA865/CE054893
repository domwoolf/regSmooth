{
    "contents" : "library(lattice)\nlibrary(latticeExtra)\nlibrary(doBy)\nlibrary(data.table)\nlibrary(RColorBrewer)\nlibrary(dplyr)\nsetwd(\"C:/Users/dominic/Box Sync/CARE-WB ethiopia/CBP/results\")\n\nRegion_name <- function(site_name) {\n  Regions <- c(\"Afar\", \"Amhara\", \"Oromia\", \"SNNPR\", \"Somali\", \"Tigray\", \"unknown region\")\n  if ( grepl(\"^Af\",site_name) ) {\n    Region_n <- 1\n  }\n  else if ( grepl(\"^Am\",site_name) ) {\n    Region_n <- 2\n  }\n  else if ( grepl(\"^Or\",site_name) ) {\n    Region_n <- 3\n  }\n  else if ( grepl(\"^SN\",site_name) ) {\n    Region_n <- 4\n  }\n  else if ( grepl(\"^So\",site_name) ) {\n    Region_n <- 5\n  }\n  else if ( grepl(\"^Ti\",site_name) ) {\n    Region_n <- 6\n  }\n  else {\n    Region_n <- 7\n  }\n  return (Regions[Region_n])\n}\n\nsites <- as.data.table(read.table(\"project_sites.csv\",  header=T,sep=\",\",quote=\"\\\"\"))\nsetnames(sites, \"CBP_code\", \"site\")\nsetkey(sites,site)\npretty_site_name <- function(site_code){\n  if (site_code %in% levels(sites$site)) {\n    region <- sites[site==site_code,]$Region\n    woreda <- sites[site==site_code,]$Woreda\n    kebele <- sites[site==site_code,]$Kebele\n    watershed <- sites[site==site_code,]$Watershed\n    if (as.character(watershed)!=as.character(kebele)) {kebele <- sprintf(\"%s, %s\",kebele,watershed)}\n    return(sprintf(\"%s, %s, %s\",region,woreda,kebele))\n  }\n  else {\n    return(\"Unknown Site\")\n  }\n}\n\n##################################################################################################################\n# read in CBP model results and do some intial data corrections, formatting and subsetting\n##################################################################################################################\ncbp    <- read.table(\"cbp7-1.csv\",  header=T,sep=\",\",quote=\"\\\"\")\n\n#remove rows without data\ncbp <- cbp[which(cbp$data_exists==TRUE),]\n\n#for most rows, annual GHG flux is reported in cbp_result column, but where data exist in calc_result column, we use those instead for annual flux\ncbp$co2e_yr <- cbp$cbp_result\ncbp$co2e_yr[which(!is.na(cbp$calc_result))] <- cbp$calc_result[which(!is.na(cbp$calc_result))]\ncbp$co2e_yr[which(!is.na(cbp$MNPP_calc_result))] <- cbp$MNPP_calc_result[which(!is.na(cbp$MNPP_calc_result))]\n\n# flag which data are for livestock leakage area outside project\ncbp$leakage_area <- FALSE\ncbp$leakage_area[grep(\"leakage\",cbp$activity_area)] <- TRUE\n\n# add a column indicating how many years project is for\n# in all our simulations, a standard project length of 20y was assumed\ncbp$years <- 20\nproject_years <- 20\n\ncbp$region <- \"\"\nfor (i in 1:NROW(cbp)) {\n  cbp$region[i] <- Region_name(cbp$site[i])\n}\n\n#drop un-needed columns\ncbp <- cbp[,which(!(names(cbp) %in% c(\"Detailed.report\", \"data_exists\", \"cbp_result\", \"calc_result\",\n                                      \"agrofor_tier1_C_ha\", \"MNPP\", \"MNPP_calc_result\")))]\n\n#convert cbp to a data.table for convenience\ncbp <- droplevels(cbp)\ncbp <- data.table(cbp)\nsetkey(cbp, site, activity_area, scenario)\n\n#correct errors in E Milne's data input:\n#Alaba, livestock N is 1224 in BAU, and 914 in project\n#EM used 1359 throughout\ncbp[site==\"SN_Al_As\" & category==\"Livestock\" & scenario==\"Project\",]$co2e_yr <- cbp[site==\"SN_Al_As\" & category==\"Livestock\" & scenario==\"Project\",]$co2e_yr * 914/1359\ncbp[site==\"SN_Al_As\" & category==\"Livestock\" & scenario!=\"Project\",]$co2e_yr <- cbp[site==\"SN_Al_As\" & category==\"Livestock\" & scenario!=\"Project\",]$co2e_yr * 1224/1359\n\n#some areas were multiplied by factor in CBP model to ensure that no area was less than 1 ha (which causes rounding error in the CBP model\n#here we divide those areas and associated fluxes by the same factor to return them to their correct values\ncbp[site==\"Af_Ew_Bo\" & category!=\"Livestock\"]$area     <- cbp[site==\"Af_Ew_Bo\" & category!=\"Livestock\"]$area /100\ncbp[site==\"Af_Ew_Bo\" & category!=\"Livestock\"]$co2e_yr  <- cbp[site==\"Af_Ew_Bo\" & category!=\"Livestock\"]$co2e_yr /100\ncbp[site==\"Af_Ew_Du\" & category!=\"Livestock\"]$area     <- cbp[site==\"Af_Ew_Du\" & category!=\"Livestock\"]$area /10\ncbp[site==\"Af_Ew_Du\" & category!=\"Livestock\"]$co2e_yr  <- cbp[site==\"Af_Ew_Du\" & category!=\"Livestock\"]$co2e_yr /10\ncbp[activity_area==\"Or_DL_Od_EuGr\" & category!=\"Livestock\"]$area  <- cbp[activity_area==\"Or_DL_Od_EuGr\" & category!=\"Livestock\"]$area/100\ncbp[activity_area==\"Or_DL_Od_EuGr\"]$co2e_yr            <- cbp[activity_area==\"Or_DL_Od_EuGr\"]$co2e_yr/100\ncbp[site==\"SN_Ko_Le\" & category!=\"Livestock\"]$area     <- cbp[site==\"SN_Ko_Le\" & category!=\"Livestock\"]$area /10\ncbp[site==\"SN_Ko_Le\" & category!=\"Livestock\"]$co2e_yr  <- cbp[site==\"SN_Ko_Le\" & category!=\"Livestock\"]$co2e_yr /10\ncbp[site==\"So_Gu_Fa\" & category!=\"Livestock\"]$area     <- cbp[site==\"So_Gu_Fa\" & category!=\"Livestock\"]$area /100\ncbp[site==\"So_Gu_Fa\"]$co2e_yr                          <- cbp[site==\"So_Gu_Fa\"]$co2e_yr /100\ncbp[site==\"So_Sh_Ba\" & category!=\"Livestock\"]$area     <- cbp[site==\"So_Sh_Ba\" & category!=\"Livestock\"]$area /10\ncbp[site==\"So_Sh_Ba\" & category!=\"Livestock\"]$co2e_yr  <- cbp[site==\"So_Sh_Ba\" & category!=\"Livestock\"]$co2e_yr /10\n\n#correct the areas in settlements\nfor (site_code in levels(cbp$site)) {\n  for (scenario_name in levels(cbp$scenario)) {\n    correction  <- length(unique(droplevels(cbp[site== site_code & flux==\"Mineral Soils\" & scenario==scenario_name & category==\"Settlements\",]$subcategory)))\n    cbp[site== site_code & flux==\"Mineral Soils\" & scenario==scenario_name & category==\"Settlements\",]$area <-\n             cbp[site== site_code & flux==\"Mineral Soils\" & scenario==scenario_name & category==\"Settlements\",]$area / correction\n  }\n}\n\n#calculate total area (hectares) of each activity within each activity area for each scenario\n#cat_areas <- summaryBy(area ~ region+site+scenario+activity_area+category, data=cbp, FUN=c(mean), na.rm=TRUE, keep.names=TRUE)\ncat_areas <- summaryBy(area ~ region+site+scenario+activity_area+category,\n          data=cbp[flux==\"Mineral Soils\",], FUN=c(sum),\n          na.rm=TRUE, keep.names=TRUE)\n\n#calculate total area (hectares) of each activity area\n#aa_areas are good\naa_areas <- summaryBy(area ~ activity_area+scenario, data=cat_areas, FUN=c(sum), na.rm=TRUE)\naa_areas <- aa_areas[which(aa_areas$scenario==\"Initial\"),]\naa_areas <- aa_areas[,scenario:=NULL]\nsetnames(aa_areas, \"area.sum\", \"aa_area\")\n\n#calculate total area (hectares) of each site\n#site_areas are good\nsite_areas <- cat_areas[category != \"Livestock\",]\nsite_areas <- site_areas[scenario==\"Project\",]\nsite_leakage_areas <- grepl(\"leakage\" , site_areas$activity_area)\nsite_areas <- site_areas[!site_leakage_areas,]\nsite_areas <- summaryBy(area ~ site, data=site_areas, FUN=c(sum), na.rm=TRUE)\nsetnames(site_areas, \"area.sum\", \"site_area\")\n\n#add columns to cat_areas for total site area, and category areas as percentage of total area\ncat_areas <- left_join(cat_areas, site_areas, by=\"site\")\ncat_areas$area.pc <- 100*cat_areas$area/cat_areas$site_area\n\n#add columns to cbp for areas of each site and activity area\ncbp <- merge(cbp, site_areas,  by = \"site\", all.x = T)\ncbp <- merge(cbp, aa_areas,  by = \"activity_area\", all.x = T)\n\n#extract a few useful subsets from whole cbp data.table\nlivestock <- cbp[category==\"Livestock\",]\nsoil <- cbp[flux==\"Mineral Soils\",]\nland <- cbp[category!=\"Livestock\" & flux!=\"Mineral Soils\",]\nghg <- land[grepl(\"N2O\",land$flux) | grepl(\"CH4\",land$flux) | grepl(\"N Fert\",land$flux)]\nbiomass <- land[!grepl(\"N2O\",land$flux) & !grepl(\"CH4\",land$flux) & !grepl(\"N Fert\",land$flux)]\n\n\n\n##################################################################################################################\n# data analysis starts here\n##################################################################################################################\n\n##############\n# Livestock\n##############\n# a) sum of livestock emissions per site in each scenario\nsite_livestock <- livestock[,sum(co2e_yr), by=\"site,scenario\"]\nsetnames(site_livestock, \"V1\", \"co2e_yr\")\nsetkey(site_livestock, site, scenario)\nsite_livestock <- site_livestock[CJ(unique(site),unique(scenario))] # make sure that there is a row for every scenario in every site\nsite_livestock[is.na(co2e_yr)]$co2e_yr <- 0 # replace missing values with zero\n# b) normalise livestock fluxes per unit area of site\nsite_livestock <- merge(site_areas, site_livestock, by=\"site\")\nsite_livestock$co2e_ha_yr <- site_livestock$co2e_yr / site_livestock$site_area\n# c) calculate c benefits for livestock C benefits of project - BAU\nsite_livestock_benefits <- merge(site_livestock[scenario==\"Project\",],\n                                site_livestock[scenario==\"BAU\",],\n                                by=\"site\")\nsite_livestock_benefits$co2e_yr_benefit <- site_livestock_benefits$co2e_yr.y -\n                                           site_livestock_benefits$co2e_yr.x\n\nsite_livestock_benefits$co2e_ha_yr_benefit <- site_livestock_benefits$co2e_ha_yr.y -\n                                               site_livestock_benefits$co2e_ha_yr.x\n\n\n##############\n# Biomass\n##############\n# d) summary of biomass based fluxes for each activity area for each scenario\nsite_biomass <- biomass[,sum(co2e_yr), by=\"site,scenario\"]\nsetnames(site_biomass, \"V1\", \"co2e_yr\")\nsetkey(site_biomass, site, scenario)\nsite_biomass <- site_biomass[CJ(unique(site),unique(scenario))]\nsite_biomass[is.na(co2e_yr)]$co2e_yr <- 0\n\n# e) normalise biomass based fluxes per unit area of each activity area\nsite_biomass <- merge(site_areas, site_biomass, by=\"site\")\nsite_biomass$co2e_ha_yr <- site_biomass$co2e_yr / site_biomass$site_area\nbiomass$co2e_ha_yr <- biomass$co2e_yr / biomass$aa_area\n\n# f) calcuate benefits as project-BAU\nsite_biomass_benefits <- merge(site_biomass[scenario==\"Project\",],\n                                 site_biomass[scenario==\"BAU\",],\n                                 by=\"site\")\nsite_biomass_benefits$co2e_yr_benefit <- site_biomass_benefits$co2e_yr.y - site_biomass_benefits$co2e_yr.x\nsite_biomass_benefits$co2e_ha_yr_benefit <- site_biomass_benefits$co2e_ha_yr.y - site_biomass_benefits$co2e_ha_yr.x\n\n\n##############\n# GHGs\n##############\n# d1) summary of ghg based fluxes for each activity area for each scenario\nsite_ghg <- ghg[,sum(co2e_yr), by=\"site,scenario\"]\nsetnames(site_ghg, \"V1\", \"co2e_yr\")\nsetkey(site_ghg, site, scenario)\nsite_ghg <- site_ghg[CJ(unique(site),unique(scenario))]\nsite_ghg[is.na(co2e_yr)]$co2e_yr <- 0\n\n# e1) normalise ghg based fluxes per unit area of each activity area\nsite_ghg <- merge(site_areas, site_ghg, by=\"site\")\nsite_ghg$co2e_ha_yr <- site_ghg$co2e_yr / site_ghg$site_area\nghg$co2e_ha_yr <- ghg$co2e_yr / ghg$aa_area\n\n# f1) calcuate benefits as project-BAU\nsite_ghg_benefits <- merge(site_ghg[scenario==\"Project\",],\n                               site_ghg[scenario==\"BAU\",],\n                               by=\"site\")\nsite_ghg_benefits$co2e_yr_benefit <- site_ghg_benefits$co2e_yr.y - site_ghg_benefits$co2e_yr.x\n\nsite_ghg_benefits$co2e_ha_yr_benefit <- site_ghg_benefits$co2e_ha_yr.y - site_ghg_benefits$co2e_ha_yr.x\n\n\n##############\n# Soil\n##############\n# h) normalise SOC change per hectare of activity area\naa_soc <- soil[,sum(co2e_yr), by=\"site,scenario,activity_area\"]\nsetnames(aa_soc, \"V1\", \"soc\")\n#soc are good except for settlements where each tree type has all area (therefore total area gets multiplied by number of trees)\n#apply correction to soc_benefits in settlements by dividing by number of tree types\nsoil_cat_areas <- soil[,sum(area), by=\"site,scenario,activity_area,category\"]\nsetnames(soil_cat_areas, \"V1\", \"ha\")\ncorrection  <-  soil_cat_areas[scenario==\"Project\" & category==\"Settlements\",ha] /\n  soil_cat_areas[scenario==\"Initial\" & category==\"Settlements\",ha]\nj <- 1\nfor (i in 1:NROW(aa_soc)) {\n  if (grepl(\"Settle\", aa_soc$activity_area[i]) && aa_soc$scenario[i]==\"Project\") {\n    print (paste(\"aa row = \",i, \"aa = \", aa_soc$activity_area[i] , \" : correction factor = \", correction[j]))\n    print(correction[j])\n    aa_soc$soc[i] <-  aa_soc$soc[i] / correction[j]\n    j <- j+1\n  }\n  if (aa_soc$soc[i]==0) {\n    aa_soc$soc[i] <-  aa_soc$soc[i-2]*1.1*1.15 # apply correction Fmg and Fi factors where CBP model fails on these\n  }\n}\n# i) for BAU and project scenarios, calculate SOC change relative to Initial for each activity area\naa_soc$soc_change <- 0\naa_soc$soc_benefit <- 0\naa_soc[scenario==\"BAU\"]$soc_change <- aa_soc[scenario==\"Initial\", soc] - aa_soc[scenario==\"BAU\", soc]\naa_soc[scenario==\"Project\"]$soc_change <- aa_soc[scenario==\"Initial\", soc] - aa_soc[scenario==\"Project\", soc]\n# j) calculate carbon benefits of project relative to BAU for each activity area\naa_soc[scenario==\"Project\"]$soc_benefit <- aa_soc[scenario==\"BAU\", soc_change] - aa_soc[scenario==\"Project\", soc_change]\n# k) calculate total C benefit for each activity area\naa_soc_benefits <- aa_soc[scenario==\"Project\",]\naa_soc_benefits <- aa_soc_benefits[,scenario:=NULL] # delete un-need columns for scenario, soc_change, soc\naa_soc_benefits <- aa_soc_benefits[,soc_change:=NULL]\naa_soc_benefits <- aa_soc_benefits[,soc:=NULL]\naa_soc_benefits <- aa_soc_benefits[-grep(\"leakage\",aa_soc_benefits$activity_area),] #only use soils within project boundary\naa_soc_benefits <- merge(aa_soc_benefits, aa_areas,  by = \"activity_area\", all.x = T)\naa_soc_benefits$soc_benefit_ha <-  aa_soc_benefits$soc_benefit / aa_soc_benefits$aa_area\naa_soc_benefits$soc_benefit_ha_yr <-  aa_soc_benefits$soc_benefit_ha / project_years\n# l) calculate total soc benefits by site\nsite_soc_benefits <- aa_soc_benefits %>%\n  group_by(site) %>%\n  summarise(soc_benefit = sum(soc_benefit), area = sum(aa_area))\nsite_soc_benefits$soc_benefit_ha <- site_soc_benefits$soc_benefit / site_soc_benefits$area\nsite_soc_benefits$soc_benefit_ha_yr <- site_soc_benefits$soc_benefit_ha / project_years\n# benefits$region <- \"\"\n# for (i in 1:NROW(benefits)) {benefits[i]$region <- Region_name(benefits[i]$site)}\n\n############################\n# Summarise all C benefits\n############################\n\n# create a table of all fluxes normalised by total site area\nnormal_fluxes  <- cbp %>%\n  group_by(site, scenario, flux) %>%\n  summarise(flux_co2e_yr = sum(co2e_yr))\n# convert soc stocks to fluxes by dividing change relative to initial by number of years\nnormal_fluxes[scenario==\"BAU\" & flux==\"Mineral Soils\"]$flux_co2e_yr  <-\n  (normal_fluxes[scenario==\"Initial\" & flux==\"Mineral Soils\", flux_co2e_yr] -\n     normal_fluxes[scenario==\"BAU\" & flux==\"Mineral Soils\", flux_co2e_yr]) / project_years\nnormal_fluxes[scenario==\"Project\" & flux==\"Mineral Soils\"]$flux_co2e_yr  <-\n  (normal_fluxes[scenario==\"Initial\" & flux==\"Mineral Soils\", flux_co2e_yr] -\n     normal_fluxes[scenario==\"Project\" & flux==\"Mineral Soils\", flux_co2e_yr]) / project_years\nnormal_fluxes[scenario==\"Initial\" & flux==\"Mineral Soils\"]$flux_co2e_yr  <- 0\nnormal_fluxes$site_area <- 0\nnormal_fluxes$region <- \"\"\nfor (i in 1:NROW(normal_fluxes)) {\n  normal_fluxes[i,]$site_area  <- site_areas[site==normal_fluxes[i,]$site]$site_area\n  normal_fluxes[i,]$region <- Region_name(normal_fluxes[i,]$site)\n}\nnormal_fluxes$normal_co2e_ha_yr <- normal_fluxes$flux_co2e_yr / normal_fluxes$site_area\nnormal_fluxes$flux_type <- \"\"\nnormal_fluxes[which(normal_fluxes$flux %in% levels(factor(biomass$flux))),]$flux_type  <- \"Biomass\"\nnormal_fluxes[which(normal_fluxes$flux %in% levels(factor(soil$flux))),]$flux_type  <- \"SOC\"\nnormal_fluxes[which(normal_fluxes$flux %in% levels(factor(livestock$flux))),]$flux_type  <- \"Livestock\"\nnormal_fluxes[which(normal_fluxes$flux %in% levels(factor(ghg$flux))),]$flux_type  <- \"Other GHGs\"\n\n\n\n\n# join all benefits into a single data table\nsite_soc_summary <- normal_fluxes[flux_type==\"SOC\"] %>%\n  group_by(site, scenario) %>%\n  summarise(soc_benefit_ha_yr = sum(normal_co2e_ha_yr))\nsite_soc_benefit_summary <- site_soc_summary %>%\n  group_by(site) %>%\n  summarise(soc_benefit_ha_yr = 0)\nsite_soc_benefit_summary$soc_benefit_ha_yr <- site_soc_summary[scenario==\"BAU\"]$soc_benefit_ha_yr - site_soc_summary[scenario==\"Project\"]$soc_benefit_ha_yr\n\nsite_livestock_benefit_summary <- site_livestock_benefits %>%\n  group_by(site) %>%\n  summarise(livestock_benefit_ha_yr = sum(co2e_ha_yr_benefit))\n\nsite_biomass_benefit_summary <- site_biomass_benefits %>%\n  group_by(site) %>%\n  summarise(biomass_benefit_ha_yr = sum(co2e_ha_yr_benefit))\n\nsite_ghg_benefit_summary <- site_ghg_benefits %>%\n  group_by(site) %>%\n  summarise(ghg_benefit_ha_yr = sum(co2e_ha_yr_benefit))\n\nsites <- left_join(sites,site_soc_benefit_summary)\nsites <- left_join(sites,site_livestock_benefit_summary)\nsites <- left_join(sites,site_biomass_benefit_summary)\nsites <- left_join(sites,site_ghg_benefit_summary)\nsites$total_benefit_ha_yr <- rowSums(sites %>%\n                                    select(soc_benefit_ha_yr,livestock_benefit_ha_yr,biomass_benefit_ha_yr,ghg_benefit_ha_yr),\n                                    na.rm=TRUE)\n\n\n# m) add c benefits to cbp data table\ncbp$flux_co2e_ha_yr <- cbp$co2e_yr / cbp$site_area\ncbp[flux==\"Mineral Soils\",]$flux_co2e_ha_yr <- 0\nfor (aa in levels(cbp$activity_area)){\n  init_soc <- sum(cbp[flux==\"Mineral Soils\" & scenario==\"Initial\" & activity_area==aa,]$co2e_yr)\n  bau_soc <- sum(cbp[flux==\"Mineral Soils\" & scenario==\"BAU\" & activity_area==aa,]$co2e_yr)\n  prj_soc <- sum(cbp[flux==\"Mineral Soils\" & scenario==\"Project\" & activity_area==aa,]$co2e_yr)\n  area <- cbp[flux==\"Mineral Soils\" & scenario==\"Project\" & activity_area==aa,]$site_area[1]\n  cbp[flux==\"Mineral Soils\" & scenario==\"BAU\" & activity_area==aa,]$flux_co2e_ha_yr[1] <- (init_soc-bau_soc)/20/area\n  cbp[flux==\"Mineral Soils\" & scenario==\"Project\" & activity_area==aa,]$flux_co2e_ha_yr[1] <- (init_soc-prj_soc)/20/area\n}\ncbp[flux==\"Mineral Soils\" & scenario==\"Initial\",]$flux_co2e_ha_yr <- 0\n\n# create a list of all benefits\nbensoc <- sites %>% select(site,soc_benefit_ha_yr)\nsetnames(bensoc, \"soc_benefit_ha_yr\", \"benefit_ha_yr\")\nbensoc$benefit_type <- \"SOC\"\nbenbm <- sites %>% select(site,biomass_benefit_ha_yr)\nsetnames(benbm, \"biomass_benefit_ha_yr\", \"benefit_ha_yr\")\nbenbm$benefit_type <- \"Biomass\"\nbenghg <- sites %>% select(site,ghg_benefit_ha_yr)\nsetnames(benghg, \"ghg_benefit_ha_yr\", \"benefit_ha_yr\")\nbenghg$benefit_type <- \"Other GHGs\"\nbenls <- sites %>% select(site,livestock_benefit_ha_yr)\nsetnames(benls, \"livestock_benefit_ha_yr\", \"benefit_ha_yr\")\nbenls$benefit_type <- \"Livestock\"\nbentot <- sites %>% select(site,total_benefit_ha_yr)\nsetnames(bentot, \"total_benefit_ha_yr\", \"benefit_ha_yr\")\nbentot$benefit_type <- \"Total\"\n\nl <- list(bensoc,  benghg,  benbm,    benls,  bentot)\nbenefits <- rbindlist(l)\nbenefits[is.na(benefit_ha_yr)]$benefit_ha_yr  <- 0\nbenefits[, region := sapply(site, Region_name)]\n# order the factor levels in order required on graphs\nbenefits$benefit_type <- factor(benefits$benefit_type, levels = c(\"Biomass\", \"SOC\", \"Livestock\", \"Other GHGs\" , \"Total\"))\n\n#######################################################\n# EXPORT TABLES OF RESULTS\n#######################################################\nlibrary(xlsx)\nwrite.xlsx(cbp, \"cbp_output.xlsx\")\nwrite.xlsx(benefits, \"cbp_benefits_output.xlsx\")\nwrite.xlsx(normal_fluxes, \"cbp_normal_fluxes_output.xlsx\")\nwrite.xlsx(sites, \"cbp_sites_output.xlsx\")\nwrite.table(normal_fluxes, \"cbp_normal_fluxes_output.txt\", sep=\"\\t\")\nwrite.table(sites, \"cbp_sites_output.txt\", sep=\"\\t\")\n\n#######################################################\n# Plot some results.....\n#######################################################\n#myColours <- brewer.pal(8,\"Dark2\")\nmyColours <-palette(c(\"chocolate3\",\"darkslateblue\",\"forestgreen\",\"red4\",\n                      \"cadetblue\",\"darkgoldenrod\",\"coral3\",\"darkolivegreen\",\n                      \"gray26\",\"dodgerblue2\",\"darkseagreen4\",\"mediumpurple1\",\n                      \"mistyrose\",\"saddlebrown\",\"yellow3\",\"firebrick\",\n                      \"aquamarine4\",\"deeppink4\",\"gray67\",\"orange2\",\n                      \"rosybrown3\",\"seagreen4\",\"red3\",\"cornflowerblue\",\n                      \"darkorchid4\",\"olivedrab\"))\nmy.settings <- list(\n  superpose.polygon=list(col=myColours, border=\"transparent\"),\n  plot.polygon=list(col=\"deepskyblue4\"),\n  strip.background=list(col=\"grey\"),\n  strip.border=list(col=\"black\"))\n\n######################################################\n# Overall\n######################################################\n\ntiff(\"Land areas by site.tif\", units=\"in\", width=10, height=7, res=300)\nbarchart(area.pc~category|site, groups=scenario, data=cat_areas,\n         ylab = expression(Area~\"(\"*percentage~of~total~area*\")\"),\n         main = \"Land areas, by site\",\n         auto.key=list(space=\"top\", columns=3, title=\"Scenario\", cex.title=1),\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n# tiff(\"test.tif\", units=\"in\", width=10, height=7, res=300)\nbwplot(normal_co2e_ha_yr ~ flux,\n       data=normal_fluxes[scenario==\"BAU\"],\n       ylim=c(-8,8),\n       main = \"GHG fluxes per unit area of intervention site, aggregated by source\\n(BAU Scenario)\",\n       panel = function(...) {\n         panel.grid(h=-1, v = nlevels(factor(normal_fluxes[scenario==\"BAU\"]$flux))-1)\n         panel.bwplot(...)\n       },\n       ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\n# dev.off()\n\nbwplot(normal_co2e_ha_yr ~ flux,\n       data=normal_fluxes[scenario==\"Project\"],\n       ylim=c(-8,8),\n       main = \"GHG fluxes per unit area of intervention site, aggregated by source\\n(Project Scenario)\",\n       panel = function(...) {\n         panel.grid(h=-1, v = nlevels(factor(normal_fluxes[scenario==\"Project\"]$flux))-1)\n         panel.bwplot(...)\n       },\n       ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\n\nbwplot(normal_co2e_ha_yr ~ flux|scenario,\n       data=normal_fluxes[scenario != \"Initial\"],\n       drop.unused.levels = T,\n       ylim=c(-8,8),\n       main = \"GHG fluxes per unit area of intervention site, aggregated by source\",\n       panel = function(...) {\n         panel.grid(h=-1, v = nlevels(factor(normal_fluxes$flux))-1)\n         panel.bwplot(...)\n       },\n       layout=c(1,2),\n       ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\n\n\n\n######################################################\n# livestock\n######################################################\n\ntiff(\"Livestock C emissions by site and scenario.tif\", units=\"in\", width=8, height=8, res=300)\nbarchart(co2e_yr ~ scenario | site, data=site_livestock,\n         origin = 0,\n         as.table=TRUE,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~yr*\")\"),\n         main = \"Livestock C emissions by site and scenario\",\n         par.settings = my.settings,\n         par.strip.text=list(cex=1.5))\ndev.off()\n\ntiff(\"Livestock C emissions per ha by site and scenario.tif\", units=\"in\", width=8, height=8, res=300)\nbarchart(co2e_ha_yr ~ scenario | site, data=site_livestock,\n         origin = 0,\n         as.table=TRUE,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Livestock C emissions by site and scenario\\n(normalised by site area)\",\n         par.settings = my.settings,\n         par.strip.text=list(cex=1.5))\ndev.off()\n\ntiff(\"Livestock C benefits per ha by site.tif\", units=\"in\", width=8, height=6, res=300)\nbarchart(co2e_ha_yr_benefit ~ site, data=site_livestock_benefits,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Livestock C benefits by site\\n(normalised by site area)\",\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n######################################################\n# Biomass\n######################################################\n\ntiff(\"Biomass C emissions per ha by site and scenario.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ scenario | site, data=site_biomass,\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Biomass C emissions by site and scenario\",\n         horizontal=F, scales=list(x=list(rot=45)),\n         par.strip.text=list(cex=1))\ndev.off()\n\ntiff(\"Biomass C emissions per ha by site and category - Initial.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=biomass[scenario==\"Initial\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Biomass C emissions by site and category\\n(Initial scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"Biomass C emissions per ha by site and category - BAU.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=biomass[scenario==\"BAU\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Biomass C emissions by site and category\\n(BAU scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"Biomass C emissions per ha by site and category - Project.tif\", units=\"in\", width=11, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=biomass[scenario==\"Project\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Biomass C emissions by site and category\\n(Project scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"Biomass C benefits by site.tif\", units=\"in\", width=10, height=7, res=300)\nbarchart(co2e_ha_yr_benefit ~ site, data=site_biomass_benefits,\n         as.table=TRUE,\n         par.settings = my.settings,\n         panel = function(...) {\n           panel.grid(h=-1, v=-1)\n           panel.barchart(...)\n         },\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"Biomass C benefits by site\",\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n######################################################\n# GHGs\n######################################################\n\ntiff(\"GHG emissions per ha by site and scenario.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ scenario | site, data=site_ghg,\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"GHG emissions by site and scenario\",\n         horizontal=F, scales=list(x=list(rot=45)),\n         par.strip.text=list(cex=1))\ndev.off()\n\ntiff(\"GHG emissions per ha by site and category - Initial.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=ghg[scenario==\"Initial\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"GHG emissions by site and category\\n(Initial scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"GHG emissions per ha by site and category - BAU.tif\", units=\"in\", width=9, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=ghg[scenario==\"BAU\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"GHG emissions by site and category\\n(BAU scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"GHG emissions per ha by site and category - Project.tif\", units=\"in\", width=11, height=7, res=300)\nbarchart(co2e_ha_yr ~ category | site, data=ghg[scenario==\"Project\",],\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"GHG emissions by site and category\\n(Project scenario)\",\n         par.strip.text=list(cex=1.5),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"GHG benefits by site.tif\", units=\"in\", width=10, height=7, res=300)\nbarchart(co2e_ha_yr_benefit ~ site, data=site_ghg_benefits,\n         as.table=TRUE,\n         par.settings = my.settings,\n         panel = function(...) {\n           panel.grid(h=-1, v=-1)\n           panel.barchart(...)\n         },\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"GHG benefits by site\",\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n######################################################\n# soc\n######################################################\n\ntiff(\"SOC benefits per ha by activity area.tif\", units=\"in\", width=10, height=7, res=300)\nbarchart(soc_benefit ~ site, data=aa_soc,\n         ylab = expression(Soil~Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"SOC benefits per ha per year, by activity area\",\n         par.settings = my.settings,\n         panel = function(...) {\n           panel.grid(h=-1, v=-1)\n           panel.barchart(...)\n         },\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"SOC benefits per ha per year by activity area.tif\", units=\"in\", width=12, height=7, res=300)\nbarchart(soc_benefit_ha_yr ~ activity_area, data=aa_soc_benefits,\n         ylab = expression(Soil~Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"SOC benefits per ha per year, by activity area\",\n         panel = function(...) {\n           panel.grid(h=-1, v=-1)\n           panel.barchart(...)\n         },\n         strip = strip.custom(style = 4),\n         par.settings = my.settings,\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"SOC benefits per ha per year by site.tif\", units=\"in\", width=10, height=7, res=300)\nbarchart(soc_benefit_ha_yr ~ site, data=aa_soc_benefits,\n         ylab = expression(Soil~Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         main = \"SOC benefits per ha per year, by site\",\n         panel = function(...) {\n           panel.grid(h=-1, v=-1)\n           panel.barchart(...)\n         },\n         strip = strip.custom(style = 4),\n         par.settings = my.settings,\n         par.strip.text=list(cex=1.5), origin = 0,\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n\n\n######################################################\n# sites\n######################################################\n\nmyPanel.barplot <- function(x=x, y=y, ...) {\n  fill <- match(x, levels(factor(cat_areas[category!=\"Livestock\",]$category)))\n  panel.barchart(x=x, y=y, ..., col=myColours[fill])\n  print(fill)\n  print(myColours[fill])\n}\nmy.settings <- list(\n  strip.background=list(col=\"grey\"),\n  strip.border=list(col=\"black\"))\nfor (site_code in levels(cat_areas$site)){\n  filename <- sprintf(\"Land areas for %s.tif\",site_code)\n  title <- sprintf(\"Land areas for %s\",pretty_site_name(site_code))\n  p <- barchart(area.pc~category|scenario, data=cat_areas[site==site_code & category!=\"Livestock\",],\n                panel = myPanel.barplot,\n           main = title,\n           ylab = expression(Area~\"(\"*percentage~of~total*\")\"),\n           layout=c(3,1),\n           index.cond=list(c(2,1,3)),\n           drop.unused.levels = T,\n           origin = 0,\n           box.ratio=6,\n           as.table=TRUE,\n           par.settings = my.settings,\n           par.strip.text=list(cex=1),\n           horizontal=F, scales=list(x=list(rot=45)))\n\n  tiff(filename, units=\"in\", width=7, height=5, res=300)\n  print(p)\n  dev.off()\n}\n\n\nmyPanel.barplot <- function(x=x, y=y, ...) {\n  fill <- match(x, levels(factor(cbp$flux)))\n  panel.barchart(x=x, y=y, ..., col=myColours[fill])\n  print(fill)\n  print(myColours[fill])\n}\nfor (site_code in levels(cat_areas$site)){\n  filename <- sprintf(\"Emissions for %s.tif\",site_code)\n  title <- sprintf(\"%s\\n(Emissions)\",pretty_site_name(site_code))\n  p <- barchart(flux_co2e_ha_yr~flux|scenario, data=droplevels(cbp[site==site_code & flux_co2e_ha_yr!=0,]),\n                panel = myPanel.barplot,\n                main = title,\n                ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n                layout=c(3,1),\n                index.cond=list(c(2,1,3)),\n                drop.unused.levels = T,\n                origin = 0,\n                box.ratio=6,\n                as.table=TRUE,\n                par.settings = my.settings,\n                par.strip.text=list(cex=1),\n                horizontal=F, scales=list(x=list(rot=45)))\n  tiff(filename, units=\"in\", width=10, height=6, res=300)\n  print(p)\n  dev.off()\n}\n\n\nmyPanel.barplot <- function(x=x, y=y, ...) {\n  fill <- match(x, levels(factor(cbp$flux)))\n  panel.barchart(x=x, y=y, ..., col=myColours[fill])\n  print(fill)\n  print(myColours[fill])\n}\nfor (site_code in levels(cat_areas$site)){\n  filename <- sprintf(\"Normalised Emissions for %s.tif\",site_code)\n  title <- sprintf(\"%s\\n(Normalised Emissions)\",pretty_site_name(site_code))\n  p <- barchart(normal_co2e_ha_yr~flux|scenario, data=droplevels(normal_fluxes[site==site_code & normal_co2e_ha_yr!=0,]),\n                panel = myPanel.barplot,\n                main = title,\n                ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n                layout=c(3,1),\n                index.cond=list(c(2,1,3)),\n                drop.unused.levels = T,\n                origin = 0,\n                box.ratio=6,\n                as.table=TRUE,\n                par.settings = my.settings,\n                par.strip.text=list(cex=1),\n                horizontal=F, scales=list(x=list(rot=45)))\n  tiff(filename, units=\"in\", width=10, height=6, res=300)\n  print(p)\n  dev.off()\n}\n\nmy.settings <- list(\n  superpose.polygon=list(col=myColours[1:8], border=\"transparent\"),\n  plot.polygon=list(col=\"deepskyblue4\"),\n  strip.background=list(col=\"grey\"),\n  strip.border=list(col=\"black\"))\np <- barchart(benefit_ha_yr~benefit_type|site,\n              data=benefits,\n              main = \"Summary of C benefits of CSI sites\",\n              ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n              origin = 0,\n              as.table=TRUE,\n              par.settings = my.settings,\n              par.strip.text=list(cex=1),\n              horizontal=F, scales=list(x=list(rot=45)))\ntiff(\"benefits_summary_bySite.tif\", units=\"in\", width=10, height=7, res=300)\nprint(p)\ndev.off()\n\np <- bwplot(benefit_ha_yr ~ benefit_type|region,\n              data=benefits,\n              main = \"Summary of C benefits of CSI sites, by region\",\n              ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n              ylim=c(-5,15),\n              origin = 0,\n              do.out = F,\n              as.table=TRUE,\n              par.settings = my.settings,\n              par.strip.text=list(cex=1),\n              horizontal=F, scales=list(x=list(rot=45)))\ntiff(\"benefits_summary_byRegion.tif\", units=\"in\", width=10, height=7, res=300)\nprint(p)\ndev.off()\n#####################################################\np <- bwplot(benefit_ha_yr ~ benefit_type,\n            data=benefits,\n            main = \"Summary of C benefits of CSI sites\",\n            ylab = expression(Tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr),\n            ylim=c(-5,15),\n            origin = 0,\n            do.out = F,\n            as.table=TRUE,\n            par.settings = my.settings,\n            par.strip.text=list(cex=1),\n            horizontal=F, scales=list(x=list(rot=45)))\ntiff(\"benefits_summary_all_sites.tif\", units=\"in\", width=5, height=3.5, res=300)\nprint(p)\ndev.off()\n\nmy.settings <- list(\n  superpose.polygon=list(col=myColours[1:8], border=\"transparent\"),\n  plot.polygon=list(col=myColours),\n  strip.background=list(col=\"grey\"),\n  strip.border=list(col=\"black\"))\n\nfor (site_code in levels(cat_areas$site)){\n  filename <- sprintf(\"C benefits for %s.tif\",site_code)\n  title <- sprintf(\"%s\\n(Carbon benefits)\",pretty_site_name(site_code))\n  p <- barchart(benefit_ha_yr~benefit_type,\n                data=benefits[site==site_code,],\n                main = title,\n                ylab = expression(Carbon~Benefits~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n                drop.unused.levels = T,\n                origin = 0,\n                as.table=TRUE,\n                par.settings = my.settings,\n                par.strip.text=list(cex=1),\n                horizontal=F, scales=list(x=list(rot=45)))\n  tiff(filename, units=\"in\", width=6, height=4, res=300)\n  print(p)\n  dev.off()\n}\n\ntiff(\"GHG fluxes by source - project scenario.tif\", units=\"in\", width=10, height=7, res=300)\nbwplot(normal_co2e_ha_yr ~ flux,\n         data=normal_fluxes[scenario==\"Project\"],\n       ylim=c(-10,4),\n         main = \"GHG fluxes per unit area of intervention site, aggregated by source\\n(Project Scenario)\",\n         panel = function(...) {\n           panel.grid(h=-1, v = nlevels(factor(normal_fluxes[scenario==\"Project\"]$flux))-1)\n           panel.bwplot(...)\n         },\n         ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"GHG fluxes by source - initial scenario.tif\", units=\"in\", width=10, height=7, res=300)\nbwplot(normal_co2e_ha_yr ~ flux,\n       data=normal_fluxes[scenario==\"Initial\"],\n       ylim=c(-2,7),\n       main = \"GHG fluxes per unit area of intervention site, aggregated by source\\n(Initial Scenario)\",\n       panel = function(...) {\n         panel.grid(h=-1, v = nlevels(factor(normal_fluxes[scenario==\"Initial\"]$flux))-1)\n         panel.bwplot(...)\n       },\n       ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\ntiff(\"GHG fluxes by source - BAU scenario.tif\", units=\"in\", width=10, height=7, res=300)\nbwplot(normal_co2e_ha_yr ~ flux,\n       data=normal_fluxes[scenario==\"BAU\"],\n       ylim=c(-2,7),\n       main = \"GHG fluxes per unit area of intervention site, aggregated by source\\n(BAU Scenario)\",\n       panel = function(...) {\n         panel.grid(h=-1, v = nlevels(factor(normal_fluxes[scenario==\"BAU\"]$flux))-1)\n         panel.bwplot(...)\n       },\n       ylab = expression(Carbon~Emissions~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\n\n\n################################################################\n#  Plot emissions in project scenario by land use\n################################################################\n\naa_fluxes <- cbp %>%\n  group_by(activity_area,category,scenario) %>%\n  summarise(aa_flux = sum(flux_co2e_ha_yr))\naa_fluxes[category==\"Livestock\"]$category <- \"Grassland\"\naa_fluxes[activity_area==\"Af_El_WL\"&scenario==\"Project\"]$category <- \"Forestland\"\naa_fluxes$category <- factor(aa_fluxes$category,\n                             levels = c(\"Grassland\", \"Annual Cropland\",\n                                        \"Settlements\", \"Perennial Cropland\" ,\"Agroforestry\", \"Forestland\"))\npar(cex.lab=2)\npar(cex.axis=2)\n\nmy.settings <- list(\n  superpose.polygon=list(col=myColours[1:8], border=\"transparent\"),\n  plot.polygon=list(col=myColours),\n  strip.background=list(col=\"grey\"),\n  strip.border=list(col=\"black\"))\npar(cex.lab=5)\npar(cex.axis=5)\ntiff(\"fluxes_by_land_use.tif\", units=\"in\", width=7, height=5, res=300, pointsize = 15)\n  bwplot(aa_flux ~ category,data=aa_fluxes[scenario==\"Project\"],\n       xlab=\"Project land use\",\n       panel = function(x,y,...){\n         panel.abline(h = 0, v = 0, lty = \"dotted\", col = \"light grey\")\n         panel.bwplot(x,y,...)},\n       ylab=expression(GHG~Emissions~\"(\"*t~CO[2]*e~ha^\"-1\"~yr^\"-1\"*\")\"),\n       horizontal=F, scales=list(x=list(rot=30)))\ndev.off()\n\nbwplot(aa_flux ~ category|scenario,data=aa_fluxes,\n       xlab=\"Project land use\",\n       panel = function(x,y,...){\n         panel.abline(h = 0, v = 0, lty = \"dotted\", col = \"light grey\")\n         panel.bwplot(x,y,...)},\n       ylab=expression(GHG~Emissions~\"(\"*t~CO[2]*e~ha^\"-1\"~yr^\"-1\"*\")\"),\n       horizontal=F, scales=list(x=list(rot=30)))\n\nfor (regname in levels(as.factor(benefits$region))) {\n  p <- barchart(benefit_ha_yr ~ benefit_type|site,\n           data=benefits[region==regname],\n           main = paste(\"Summary of C benefits of \", regname, \" sites\",sep=\"\"),\n           ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n           origin = 0,\n           do.out = F,\n           as.table=TRUE,\n           par.settings = my.settings,\n           par.strip.text=list(cex=1),\n           horizontal=F, scales=list(x=list(rot=45)))\n  filename  <- paste(\"C_benefits_\",regname,\".tif\",sep=\"\")\n  tiff(filename, units=\"in\", width=7, height=5, res=300, pointsize = 15)\n  print(p)\n  dev.off()\n}\n\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n       data=benefits[region==\"Afar\"],\n       main = \"Summary of C benefits of Afar sites\",\n       ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n       origin = 0,\n       do.out = F,\n       as.table=TRUE,\n       par.settings = my.settings,\n       par.strip.text=list(cex=1),\n       horizontal=F, scales=list(x=list(rot=45)))\ndev.off()\n\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n         data=benefits[region==\"Amhara\"],\n         main = \"Summary of C benefits of Amhara sites\",\n         ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         do.out = F,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n         data=benefits[region==\"SNNPR\"],\n         main = \"Summary of C benefits of SNNPR sites\",\n         ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         do.out = F,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n         data=benefits[region==\"Somali\"],\n         main = \"Summary of C benefits of Somali sites\",\n         ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         do.out = F,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n         data=benefits[region==\"Tigray\"],\n         main = \"Summary of C benefits of Tigray sites\",\n         ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         do.out = F,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\n\nbarchart(benefit_ha_yr ~ benefit_type|site,\n         data=benefits[region==\"Oromia\"],\n         main = \"Summary of C benefits of Oromia sites\",\n         ylab = expression(GHG~Abatement~\"(\"*tonnes~CO[2]*e~\"/\"~ha~\"/\"~yr*\")\"),\n         origin = 0,\n         do.out = F,\n         as.table=TRUE,\n         par.settings = my.settings,\n         par.strip.text=list(cex=1),\n         horizontal=F, scales=list(x=list(rot=45)))\n\n\n\n# graphs for journal publication --------------------------------------------------------\n\nlibrary(cowplot)\n\n# all_normal_fluxes <- merge(normal_fluxes, \n#                            with(normal_fluxes, expand.grid(\n#                              scenario = levels(scenario), \n#                              flux = levels(flux))), \n#                            all.y = TRUE, by=c(\"scenario\",\"flux\"))\nsetwd(\"gfx\")\n\nco2e_by_flux_scenario <- ggplot(data=normal_fluxes[scenario != \"Initial\"]) +\n  geom_boxplot(aes(x = flux, y = normal_co2e_ha_yr), outlier.shape = NA) +\n  scale_y_continuous(limits = c(-8, 6)) +\n  facet_grid(scenario ~ .) +\n  theme_cowplot()  +\n  panel_border(colour = \"gray80\", size = 0.5, linetype = 1, remove = FALSE) +\n  background_grid() +\n  theme(axis.text.x = element_text(angle = 50, hjust=1), plot.margin = unit(c(1,1,1,1), \"cm\"))\npostscript(\"co2e_by_flux_scenario.eps\", width = 6.27, height = 7)\nco2e_by_flux_scenario\ndev.off()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1464020052730.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3961404360",
    "id" : "CE054893",
    "lastKnownWriteTime" : 1464103008,
    "path" : "C:/Users/Dominic/Box Sync/CARE-WB ethiopia/CBP/results/cbp6.6.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}